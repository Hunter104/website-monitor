#!/usr/bin/bash
: "${HOOK_URL:?}"
readonly MAX_TIME_ENTRIES=5

send_message() { curl -H "Content-Type: application/json" -X POST -d "{\"content\":\"$1\"}" "$HOOK_URL"; }

is_slow() {
  echo "$2" >> "$1" && tail -n "$MAX_TIME_ENTRIES" "$1" | sponge "$1"
  (( $(wc -l < "$1") < MAX_TIME_ENTRIES )) && return 1
  (( $(awk '{sum+=$1} END {print sum/NR > 5}' "$1") ))
}

tmp_result=$(mktemp -t website-monitor.XXXXXX) && cp ./monitor-db "$tmp_result"
while IFS=' ' read -r url name last_status _; do 
  time=$(curl -LIsSf --retry 2 --max-time 20 "$url" -w '%{time_total}' -o /dev/null)
  exit_code=$?
  case $exit_code in 
    0) is_slow "$name" "$time" && status="SLOW" || status="UP"; ;;
    22|28) status="DOWN" ;;
    *) continue ;;
  esac

  echo "$name's ($url) results: Time taken $time; Exit code $exit_code; Status: $status"
  [[ $status == "$last_status" ]] && continue

  sed -i "s|$url $name $last_status .*|$url $name $status $(date -Is)|" "$tmp_result"
  case $status in 
    UP) send_message "✅ **$name** está online!" ;;
    DOWN) send_message "❌ **$name** está fora do ar! 😞" ;;
    SLOW) send_message "🚧 **$name** está lento!" ;;
  esac
done < ./monitor-db
mv "$tmp_result" ./monitor-db
